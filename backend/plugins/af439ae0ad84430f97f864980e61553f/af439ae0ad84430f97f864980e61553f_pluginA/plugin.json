{
  "id": "pluginA",
  "name": "Plugin A",
  "description": "A plugin with communication components for remote messaging",
  "version": "1.0.0",
  "scope": "pluginA",
  "modules": [
    {
      "id": "ai-prompt-chat-v2",
      "name": "AIPromptChat",
      "displayName": "AI Prompt Chat V2",
      "description": "Interactive chat interface for AI prompts and responses",
      "icon": "Chat",
      "category": "AI Tools",
      "tags": ["AI", "Chat", "Prompt", "LLM"],
      "enabled": true,
      "props": {
        "initialGreeting": "Hello! How can I assist you today?",
        "promptQuestion": "Type your message here..."
      },
      "configFields": {
        "initialGreeting": {
          "type": "string",
          "label": "Initial Greeting",
          "default": "Hello! How can I assist you today?"
        },
        "promptQuestion": {
          "type": "string",
          "label": "Prompt Placeholder",
          "default": "Type your message here..."
        }
      },
      "requiredServices": {
        "api": {
          "methods": ["get", "post", "postStreaming"],
          "version": "1.0.0"
        },
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [
          {
            "type": "ai.prompt",
            "description": "AI prompt sent by user",
            "contentSchema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "User prompt text",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the prompt was sent",
                  "required": true
                }
              }
            }
          }
        ],
        "receives": [
          {
            "type": "model.selection",
            "description": "Selected model information",
            "contentSchema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "description": "Selected model information",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the model was selected",
                  "required": true
                }
              }
            }
          }
        ]
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 4,
        "minHeight": 4,
        "defaultWidth": 6,
        "defaultHeight": 6
      }
    },    
    {
      "id": "ai-prompt-chat",
      "name": "ComponentAIPromptChat",
      "displayName": "AI Prompt Chat",
      "description": "Interactive chat interface for AI prompts and responses",
      "icon": "Chat",
      "category": "AI Tools",
      "tags": ["AI", "Chat", "Prompt", "LLM"],
      "enabled": true,
      "props": {
        "initialGreeting": "Hello! How can I assist you today?",
        "promptQuestion": "Type your message here..."
      },
      "configFields": {
        "initialGreeting": {
          "type": "string",
          "label": "Initial Greeting",
          "default": "Hello! How can I assist you today?"
        },
        "promptQuestion": {
          "type": "string",
          "label": "Prompt Placeholder",
          "default": "Type your message here..."
        }
      },
      "requiredServices": {
        "api": {
          "methods": ["get", "post", "postStreaming"],
          "version": "1.0.0"
        },
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [
          {
            "type": "ai.prompt",
            "description": "AI prompt sent by user",
            "contentSchema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "description": "User prompt text",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the prompt was sent",
                  "required": true
                }
              }
            }
          }
        ],
        "receives": [
          {
            "type": "model.selection",
            "description": "Selected model information",
            "contentSchema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "description": "Selected model information",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the model was selected",
                  "required": true
                }
              }
            }
          }
        ]
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 4,
        "minHeight": 4,
        "defaultWidth": 6,
        "defaultHeight": 6
      }
    },
    {
      "id": "model-selection",
      "name": "ComponentModelSelection",
      "displayName": "Model Selection",
      "description": "Select an LLM model from an Ollama server",
      "icon": "ModelTraining",
      "category": "LLM Servers",
      "tags": ["LLM", "Model", "Ollama", "Selection"],
      "enabled": true,
      "props": {
        "moduleId": "model-selection",
        "label": "Select Model",
        "position": "top"
      },
      "configFields": {
        "moduleId": {
          "type": "string",
          "label": "Module ID",
          "default": "model-selection"
        },
        "label": {
          "type": "string",
          "label": "Label Text",
          "default": "Select Model"
        },
        "position": {
          "type": "select",
          "label": "Label Position",
          "default": "top",
          "options": [
            { "value": "top", "label": "Top" },
            { "value": "left", "label": "Left" },
            { "value": "right", "label": "Right" },
            { "value": "bottom", "label": "Bottom" }
          ]
        }
      },
      "requiredServices": {
        "api": {
          "methods": ["get", "post"],
          "version": "1.0.0"
        },
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [
          {
            "type": "model.selection",
            "description": "Selected model information",
            "contentSchema": {
              "type": "object",
              "properties": {
                "serverAddress": {
                  "type": "string",
                  "description": "Ollama server address",
                  "required": true
                },
                "serverType": {
                  "type": "string",
                  "description": "Server type (ollama)",
                  "required": true
                },
                "modelName": {
                  "type": "string",
                  "description": "Selected model name",
                  "required": true
                },
                "serverName": {
                  "type": "string",
                  "description": "Ollama server name",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the model was selected",
                  "required": true
                }
              }
            }
          }
        ],
        "receives": []
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 3,
        "minHeight": 1,
        "defaultWidth": 6,
        "defaultHeight": 1
      }
    },
    {
      "id": "component-display",
      "name": "ComponentDisplay",
      "displayName": "Message Display",
      "description": "Displays messages received from other components",
      "icon": "Chat",
      "category": "Communication",
      "tags": ["messages", "display", "remote", "communication"],
      "enabled": true,
      "props": {
        "moduleId": "component-display",
        "isRemote": true,
        "maxMessages": 10
      },
      "configFields": {
        "moduleId": {
          "type": "string",
          "label": "Module ID",
          "default": "component-display"
        },
        "isRemote": {
          "type": "boolean",
          "label": "Remote Mode",
          "default": true
        },
        "maxMessages": {
          "type": "number",
          "label": "Maximum Messages",
          "default": 10
        }
      },
      "requiredServices": {
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [],
        "receives": [
          {
            "type": "component.message",
            "description": "Message to be displayed",
            "contentSchema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Message content",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the message was sent",
                  "required": false
                }
              }
            }
          }
        ]
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 3,
        "minHeight": 4,
        "defaultWidth": 6,
        "defaultHeight": 6
      }
    },
    {
      "id": "component-send",
      "name": "ComponentSend",
      "displayName": "Message Sender",
      "description": "Sends messages to other components",
      "icon": "Send",
      "category": "Communication",
      "tags": ["messages", "send", "remote", "communication"],
      "enabled": true,
      "props": {
        "moduleId": "component-send",
        "targetModuleId": "component-display",
        "isRemote": true
      },
      "configFields": {
        "moduleId": {
          "type": "string",
          "label": "Module ID",
          "default": "component-send"
        },
        "targetModuleId": {
          "type": "string",
          "label": "Target Module ID",
          "default": "component-display"
        },
        "isRemote": {
          "type": "boolean",
          "label": "Remote Mode",
          "default": true
        }
      },
      "requiredServices": {
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [
          {
            "type": "component.message",
            "description": "Message to be sent to target component",
            "contentSchema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Message content",
                  "required": true
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the message was sent",
                  "required": false
                }
              }
            }
          }
        ],
        "receives": []
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 3,
        "minHeight": 2,
        "defaultWidth": 6,
        "defaultHeight": 3
      }
    },
    {
      "id": "component1",
      "name": "Component",
      "displayName": "Basic Component",
      "description": "A simple component from Plugin A",
      "icon": "ViewModule",
      "category": "Basic",
      "tags": ["basic", "demo"],
      "enabled": true,
      "props": {},
      "configFields": {},
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 2,
        "minHeight": 2,
        "defaultWidth": 3,
        "defaultHeight": 2
      }
    },
    {
      "id": "component2",
      "name": "Component2",
      "displayName": "Advanced Component",
      "description": "A more advanced component with additional features",
      "icon": "ViewQuilt",
      "category": "Advanced",
      "tags": ["advanced", "interactive"],
      "enabled": true,
      "props": {},
      "configFields": {},
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 2,
      "dependencies": [],
      "layout": {
        "minWidth": 2,
        "minHeight": 2,
        "defaultWidth": 3,
        "defaultHeight": 2
      }
    },
    {
      "id": "component3",
      "name": "Component3",
      "displayName": "Layout Component",
      "description": "A component for creating layouts",
      "icon": "Dashboard",
      "category": "Layout",
      "tags": ["layout", "container"],
      "enabled": true,
      "props": {"randomNumber": 42},
      "configFields": {},
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 3,
      "dependencies": [],
      "layout": {
        "minWidth": 2,
        "minHeight": 2,
        "defaultWidth": 3,
        "defaultHeight": 2
      }
    },
    {
      "id": "component4",
      "name": "Component4",
      "displayName": "Test Component",
      "description": "A component for Test #4",
      "icon": "Dashboard",
      "category": "Layout",
      "tags": ["layout", "container", "todo", "api"],
      "enabled": true,
      "props": {"randomNumber": 40},
      "configFields": {},
      "requiredServices": {
        "api": {
          "methods": ["get", "post", "delete"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        },
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 3,
      "dependencies": [],
      "layout": {
        "minWidth": 2,
        "minHeight": 2,
        "defaultWidth": 3,
        "defaultHeight": 2
      }
    },
    {
      "id": "componentOllama",
      "name": "ComponentOllama",
      "displayName": "Ollama Configuration",
      "description": "Configure Ollama server settings",
      "icon": "Settings",
      "category": "LLM Servers",
      "tags": ["Settings", "Ollama Server Settings"],
      "enabled": true,
      "props": {},
      "configFields": {},
      "requiredServices": {
        "settings": {
          "methods": ["getSetting", "setSetting"],
          "version": "1.0.0"
        },
        "api": {
          "methods": ["get", "post"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 1,      
      "dependencies": [],
      "layout": {
        "minWidth": 2,
        "minHeight": 3,
        "defaultWidth": 3,
        "defaultHeight": 3
      }
    },
    {
      "id": "componentTheme",
      "name": "ComponentTheme",
      "displayName": "Theme Settings",
      "description": "Change application theme",
      "icon": "DarkMode",
      "category": "Settings",
      "tags": ["Settings", "Theme Settings"],
      "enabled": true,
      "props": {},
      "configFields": {},
      "requiredServices": {
        "theme": {
          "methods": ["getCurrentTheme", "setTheme", "toggleTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        },
        "settings": {
          "methods": ["getSetting", "setSetting", "registerSettingDefinition", "getSettingDefinitions", "subscribe", "subscribeToCategory"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 6,
        "minHeight": 1,
        "defaultWidth": 12,
        "defaultHeight": 1
      }
    },
    {
      "id": "componentOllamaServer",
      "name": "ComponentOllamaServer",
      "displayName": "Ollama Servers",
      "description": "Manage multiple Ollama server connections",
      "icon": "Storage",
      "category": "LLM Servers",
      "tags": ["Settings", "Ollama Server Settings", "Multiple Servers"],
      "enabled": true,
      "props": {},
      "configFields": {},
      "requiredServices": {
        "api": {
          "methods": ["get", "post", "delete"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [],
        "receives": []
      },
      "priority": 1,      
      "dependencies": [],
      "layout": {
        "minWidth": 6,
        "minHeight": 4,
        "defaultWidth": 8,
        "defaultHeight": 5
      }
    },
    {
      "id": "model-selection-v2",
      "name": "ComponentModelSelection",
      "displayName": "Model Selection v2",
      "description": "Select an AI model from multiple providers with enhanced UI",
      "icon": "ModelTraining",
      "category": "LLM Servers",
      "tags": ["LLM", "Model", "Selection", "AI", "Providers", "OpenAI", "Ollama"],
      "enabled": true,
      "props": {
        "moduleId": "model-selection-v2",
        "label": "Select Model",
        "labelPosition": "top",
        "providerSettings": ["ollama_servers_settings"],
        "targetComponent": ""
      },
      "configFields": {
        "moduleId": {
          "type": "string",
          "label": "Module ID",
          "default": "model-selection-v2"
        },
        "label": {
          "type": "string",
          "label": "Label Text",
          "default": "Select Model"
        },
        "labelPosition": {
          "type": "select",
          "label": "Label Position",
          "default": "top",
          "options": [
            { "value": "top", "label": "Top" },
            { "value": "left", "label": "Left" },
            { "value": "right", "label": "Right" },
            { "value": "bottom", "label": "Bottom" }
          ]
        },
        "providerSettings": {
          "type": "array",
          "label": "Provider Settings",
          "default": ["ollama_servers_settings"],
          "description": "List of settings to use for model retrieval (e.g., ollama_servers_settings, openai_servers_settings)"
        },
        "targetComponent": {
          "type": "string",
          "label": "Target Component",
          "default": "",
          "description": "Component to send model selection events to (leave empty to broadcast to all)"
        }
      },
      "requiredServices": {
        "api": {
          "methods": ["get", "post"],
          "version": "1.0.0"
        },
        "event": {
          "methods": ["sendMessage", "subscribeToMessages", "unsubscribeFromMessages"],
          "version": "1.0.0"
        },
        "settings": {
          "methods": ["getSetting", "setSetting", "getSettingDefinitions"],
          "version": "1.0.0"
        },
        "theme": {
          "methods": ["getCurrentTheme", "addThemeChangeListener", "removeThemeChangeListener"],
          "version": "1.0.0"
        }
      },
      "messages": {
        "sends": [
          {
            "type": "model.selection",
            "description": "Selected model information",
            "contentSchema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "description": "Selected model information",
                  "required": true,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Model name",
                      "required": true
                    },
                    "provider": {
                      "type": "string",
                      "description": "Provider type (e.g., ollama, openai)",
                      "required": true
                    },
                    "providerId": {
                      "type": "string",
                      "description": "Provider settings ID",
                      "required": true
                    },
                    "serverName": {
                      "type": "string",
                      "description": "Server name",
                      "required": true
                    },
                    "serverId": {
                      "type": "string",
                      "description": "Server ID",
                      "required": true
                    }
                  }
                },
                "timestamp": {
                  "type": "string",
                  "description": "ISO timestamp of when the model was selected",
                  "required": true
                }
              }
            }
          }
        ],
        "receives": []
      },
      "priority": 1,
      "dependencies": [],
      "layout": {
        "minWidth": 3,
        "minHeight": 1,
        "defaultWidth": 6,
        "defaultHeight": 1
      }
    }
  ],
  "type": "frontend",
  "bundlemethod": "webpack",
  "bundlelocation": "frontend/dist/remoteEntry.js",
  "islocal": false,
  "icon": "Dashboard",
  "category": "Utilities",
  "status": "activated",
  "official": true,
  "author": "BrainDrive Team",
  "lastUpdated": "2025-03-06",
  "compatibility": "1.0.0",
  "downloads": 0
}
