"""add_plugin_states_table

Revision ID: 7d0185f79500
Revises: 49d16cc7f8f1
Create Date: 2025-07-15 15:44:59.615804

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '7d0185f79500'
down_revision: Union[str, None] = '49d16cc7f8f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plugin_state_configs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('plugin_id', sa.String(length=255), nullable=False),
    sa.Column('config_data', sa.Text(), nullable=False),
    sa.Column('config_version', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plugin_state_configs', schema=None) as batch_op:
        batch_op.create_index('idx_plugin_state_config_plugin', ['plugin_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_state_configs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_state_configs_plugin_id'), ['plugin_id'], unique=True)

    op.create_table('plugin_states',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('plugin_id', sa.String(length=255), nullable=False),
    sa.Column('page_id', sa.String(length=255), nullable=True),
    sa.Column('state_key', sa.String(length=255), nullable=True),
    sa.Column('state_data', sa.Text(), nullable=False),
    sa.Column('state_schema_version', sa.String(length=50), nullable=True),
    sa.Column('state_strategy', sa.String(length=50), nullable=True),
    sa.Column('compression_type', sa.String(length=20), nullable=True),
    sa.Column('state_size', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.TIMESTAMP(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('ttl_expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plugin_states', schema=None) as batch_op:
        batch_op.create_index('idx_plugin_state_last_accessed', ['last_accessed'], unique=False)
        batch_op.create_index('idx_plugin_state_sync', ['sync_status'], unique=False)
        batch_op.create_index('idx_plugin_state_ttl', ['ttl_expires_at'], unique=False)
        batch_op.create_index('idx_plugin_state_user_plugin', ['user_id', 'plugin_id'], unique=False)
        batch_op.create_index('idx_plugin_state_user_plugin_page', ['user_id', 'plugin_id', 'page_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_states_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_states_page_id'), ['page_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_states_plugin_id'), ['plugin_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_states_state_key'), ['state_key'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_states_user_id'), ['user_id'], unique=False)

    op.create_table('plugin_state_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('plugin_state_id', sa.String(length=36), nullable=False),
    sa.Column('state_data', sa.Text(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['plugin_state_id'], ['plugin_states.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plugin_state_history', schema=None) as batch_op:
        batch_op.create_index('idx_plugin_state_history_state_id', ['plugin_state_id'], unique=False)
        batch_op.create_index('idx_plugin_state_history_version', ['plugin_state_id', 'version'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_state_history_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_plugin_state_history_plugin_state_id'), ['plugin_state_id'], unique=False)

    # Note: settings_definitions and settings_instances tables are preserved
    # They were restored in the restore_settings_tables migration and should not be dropped
    op.drop_table('pages_temp')
    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('ix_components_user_id')
        batch_op.create_unique_constraint('components_component_id_user_id_key', ['component_id', 'user_id'])
        batch_op.create_foreign_key('fk_components_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('conversation_tags', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_index('ix_conversation_tags_conversation_id')
        batch_op.drop_index('ix_conversation_tags_tag_id')
        batch_op.create_foreign_key('fk_conversation_tags_tag_id', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_conversation_tags_conversation_id', 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('idx_conversations_page_id')
        batch_op.drop_index('idx_conversations_user_page')
        batch_op.drop_index('ix_conversations_persona_id')
        batch_op.drop_index('ix_conversations_user_id')
        batch_op.create_foreign_key('fk_conversations_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('ix_messages_conversation_id')
        batch_op.create_foreign_key('fk_messages_conversation_id', 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('module', schema=None) as batch_op:
        batch_op.drop_index('ix_module_plugin_id')
        batch_op.drop_index('ix_module_user_id')
        batch_op.create_index(batch_op.f('ix_module_id'), ['id'], unique=False)
        batch_op.create_foreign_key('fk_module_user_id', 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key('fk_module_plugin_id', 'plugin', ['plugin_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('navigation_routes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=32),
               nullable=False)
        batch_op.alter_column('route',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('creator_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('default_page_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_unique_constraint('navigation_routes_route_creator_id_key', ['route', 'creator_id'])
        batch_op.create_foreign_key('fk_navigation_routes_default_page_id', 'pages', ['default_page_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('oauth_accounts', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('ix_oauth_accounts_user_id')
        batch_op.create_foreign_key('fk_oauth_accounts_user_id', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.create_unique_constraint('pages_route_creator_id_key', ['route', 'creator_id'])

    with op.batch_alter_table('personas', schema=None) as batch_op:
        batch_op.drop_index('ix_personas_id')

    with op.batch_alter_table('plugin', schema=None) as batch_op:
        batch_op.alter_column('update_available',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text("'0'"))
        batch_op.alter_column('installation_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'local'"))
        batch_op.drop_index('ix_plugin_user_id')
        batch_op.create_index(batch_op.f('ix_plugin_id'), ['id'], unique=False)
        batch_op.create_unique_constraint('unique_plugin_per_user', ['user_id', 'plugin_slug'])
        batch_op.create_foreign_key('fk_plugin_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index('ix_role_role_name')
        batch_op.create_unique_constraint('uq_role_role_name', ['role_name'])

    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.alter_column('role_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.drop_index('ix_role_permissions_role_id')
        batch_op.create_unique_constraint('uq_role_permission', ['role_id', 'permission_name'])
        batch_op.create_foreign_key('fk_role_permissions_role_id', 'user_roles', ['role_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('expires_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('ix_sessions_active_tenant_id')
        batch_op.drop_index('ix_sessions_user_id')
        batch_op.create_unique_constraint('uq_sessions_session_token', ['session_token'])
        batch_op.create_foreign_key('fk_sessions_active_tenant_id', 'tenants', ['active_tenant_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('fk_sessions_user_id', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_index('ix_tags_user_id')
        batch_op.create_foreign_key('fk_tags_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('tenant_users', schema=None) as batch_op:
        batch_op.alter_column('tenant_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.alter_column('role_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
        batch_op.drop_index('ix_tenant_users_role_id')
        batch_op.drop_index('ix_tenant_users_tenant_id')
        batch_op.drop_index('ix_tenant_users_user_id')
        batch_op.create_unique_constraint('uq_tenant_user', ['tenant_id', 'user_id'])
        batch_op.create_foreign_key('fk_tenant_users_role_id', 'user_roles', ['role_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_tenant_users_tenant_id', 'tenants', ['tenant_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('fk_tenant_users_user_id', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_unique_constraint('uq_tenants_sso_domain', ['sso_domain'])
        batch_op.create_unique_constraint('uq_tenants_name', ['name'])

    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_user_roles_role_name', ['role_name'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('user_roles', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_roles_role_name', type_='unique')

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.drop_constraint('uq_tenants_name', type_='unique')
        batch_op.drop_constraint('uq_tenants_sso_domain', type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('tenant_users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('uq_tenant_user', type_='unique')
        batch_op.create_index('ix_tenant_users_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_tenant_users_tenant_id', ['tenant_id'], unique=False)
        batch_op.create_index('ix_tenant_users_role_id', ['role_id'], unique=False)
        batch_op.alter_column('role_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
        batch_op.alter_column('tenant_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_tags_user_id', ['user_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('sessions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_sessions_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_sessions_active_tenant_id', ['active_tenant_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('expires_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)

    with op.batch_alter_table('role_permissions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('uq_role_permission', type_='unique')
        batch_op.create_index('ix_role_permissions_role_id', ['role_id'], unique=False)
        batch_op.alter_column('role_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint('uq_role_role_name', type_='unique')
        batch_op.create_index('ix_role_role_name', ['role_name'], unique=1)

    with op.batch_alter_table('plugin', schema=None) as batch_op:
        batch_op.drop_constraint('fk_plugin_user_id', type_='foreignkey')
        batch_op.drop_constraint('unique_plugin_per_user', type_='unique')
        batch_op.drop_index(batch_op.f('ix_plugin_id'))
        batch_op.create_index('ix_plugin_user_id', ['user_id'], unique=False)
        batch_op.alter_column('installation_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'local'"))
        batch_op.alter_column('update_available',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text("'0'"))

    with op.batch_alter_table('personas', schema=None) as batch_op:
        batch_op.create_index('ix_personas_id', ['id'], unique=False)

    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.drop_constraint('pages_route_creator_id_key', type_='unique')

    with op.batch_alter_table('oauth_accounts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_oauth_accounts_user_id', ['user_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)

    with op.batch_alter_table('navigation_routes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('navigation_routes_route_creator_id_key', type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('default_page_id',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)
        batch_op.alter_column('creator_id',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
        batch_op.alter_column('route',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=36),
               nullable=True)

    with op.batch_alter_table('module', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('fk_module_user_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_module_id'))
        batch_op.create_index('ix_module_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_module_plugin_id', ['plugin_id'], unique=False)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_messages_conversation_id', ['conversation_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_conversations_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_conversations_persona_id', ['persona_id'], unique=False)
        batch_op.create_index('idx_conversations_user_page', ['user_id', 'page_id'], unique=False)
        batch_op.create_index('idx_conversations_page_id', ['page_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('conversation_tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index('ix_conversation_tags_tag_id', ['tag_id'], unique=False)
        batch_op.create_index('ix_conversation_tags_conversation_id', ['conversation_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.drop_constraint('fk_components_user_id', type_='foreignkey')
        batch_op.drop_constraint('components_component_id_user_id_key', type_='unique')
        batch_op.create_index('ix_components_user_id', ['user_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    op.create_table('pages_temp',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('route', sa.VARCHAR(length=255), nullable=False),
    sa.Column('parent_route', sa.VARCHAR(length=255), nullable=True),
    sa.Column('content', sqlite.JSON(), nullable=False),
    sa.Column('content_backup', sqlite.JSON(), nullable=True),
    sa.Column('backup_date', sa.DATETIME(), nullable=True),
    sa.Column('creator_id', sa.VARCHAR(), nullable=False),
    sa.Column('navigation_route_id', sa.VARCHAR(), nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), nullable=True),
    sa.Column('publish_date', sa.DATETIME(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('icon', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('parent_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('is_parent_page', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['navigation_route_id'], ['navigation_routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings_instances',
    sa.Column('id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('definition_id', sa.VARCHAR(length=32), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('value', sa.TEXT(), nullable=True),
    sa.Column('scope', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('page_id', sa.VARCHAR(length=32), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # Note: settings_definitions and settings_instances tables are preserved
    # They are managed by the restore_settings_tables migration and should not be recreated here
    with op.batch_alter_table('plugin_state_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plugin_state_history_plugin_state_id'))
        batch_op.drop_index(batch_op.f('ix_plugin_state_history_id'))
        batch_op.drop_index('idx_plugin_state_history_version')
        batch_op.drop_index('idx_plugin_state_history_state_id')

    op.drop_table('plugin_state_history')
    with op.batch_alter_table('plugin_states', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plugin_states_user_id'))
        batch_op.drop_index(batch_op.f('ix_plugin_states_state_key'))
        batch_op.drop_index(batch_op.f('ix_plugin_states_plugin_id'))
        batch_op.drop_index(batch_op.f('ix_plugin_states_page_id'))
        batch_op.drop_index(batch_op.f('ix_plugin_states_id'))
        batch_op.drop_index('idx_plugin_state_user_plugin_page')
        batch_op.drop_index('idx_plugin_state_user_plugin')
        batch_op.drop_index('idx_plugin_state_ttl')
        batch_op.drop_index('idx_plugin_state_sync')
        batch_op.drop_index('idx_plugin_state_last_accessed')

    op.drop_table('plugin_states')
    with op.batch_alter_table('plugin_state_configs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plugin_state_configs_plugin_id'))
        batch_op.drop_index(batch_op.f('ix_plugin_state_configs_id'))
        batch_op.drop_index('idx_plugin_state_config_plugin')

    op.drop_table('plugin_state_configs')
    # ### end Alembic commands ###
